name: Docker Build & Release

on:
  push:
    branches:
      main
    workflow_dispatch:

jobs:
  tag-repo:
    runs-on: ubuntu-20.04
    outputs:
      tag_version: ${{ steps.tag_version.outputs.new_tag }}
      change_log: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    strategy:
      matrix:
        version: ['1.16','1.17','1.18','1.18-terra']
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.tag-repo..outputs.tag_version }}

      - name: Kaniko build
        uses: aevea/action-kaniko@master
        with:
          image: go
          registry: ghcr.io
          password: ${{ secrets.GITHUB_TOKEN }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # image: cultclassik/go-builder
          # password: ${{ secrets.DOCKERHUB_PASSWORD }}
          tag: ${{ needs.tag.tag_version.outputs.new_tag }}-${{ matrix.version }}
          tag_with_latest: false
          build_file: ${{ matrix.version }}/Dockerfile
          # cache: true
          # cache_registry: cache
          # skip_unchanged_digest: true

  # docker-scan:
  #   runs-on: ubuntu-latest
  #   steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          # image-ref: cultclassik/go-builder:${{ needs.tag-repo.outputs.tag_version }}-${{ matrix.version }}
          image-ref: ghcr.io/diehlabs/go-builder/go:${{ needs.tag-repo.outputs.tag_version }}-${{ matrix.version }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # tags:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Create a GitHub release
  #       uses: ncipollo/release-action@v1
  #       with:
  #         tag: ${{ needs.tag-repo..outputs.tag_version }}
  #         name: Release ${{ needs.tag-repo..outputs.tag_version }}
  #         body: ${{ needs.tag-repo.outputs.change_log }}
  #     - name: Tag Docker as latest
  #       run: |
  #         # echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
  #         echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

  #         docker tag
